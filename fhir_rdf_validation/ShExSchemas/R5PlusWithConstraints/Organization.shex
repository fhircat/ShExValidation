PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 


#imported_begin 
IMPORT <aux.shex>
#imported_end
#imported_begin 
IMPORT <string.shex>
#imported_end
#imported_begin 
IMPORT <Period.shex>
#imported_end
#imported_begin 
IMPORT <boolean.shex>
#imported_end
#imported_begin 
IMPORT <markdown.shex>
#imported_end
#imported_begin 
IMPORT <Endpoint.shex>
#imported_end
#imported_begin 
IMPORT <Reference.shex>
#imported_end
#imported_begin 
IMPORT <Identifier.shex>
#imported_end
#imported_begin 
IMPORT <DomainResource.shex>
#imported_end
#imported_begin 
IMPORT <CodeableConcept.shex>
#imported_end
#imported_begin 
IMPORT <BackboneElement.shex>
#imported_end
#imported_begin 
IMPORT <ExtendedContactDetail.shex>
#imported_end

start=@<Organization> AND {fhir:nodeRole [fhir:treeRoot]}

# A grouping of people or organizations with a common purpose
<Organization> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:Organization]?;
    fhir:nodeRole [fhir:treeRoot]?;

    fhir:identifier @<OneOrMore_Identifier>?;  # Identifies this organization  
                                            # across multiple systems 
    fhir:active @<boolean>?;                # Whether the organization's record 
                                            # is still in active use 
    fhir:type @<OneOrMore_CodeableConcept>?;  # Kind of organization
    fhir:name @<string>?;                   # Name used for the organization
    fhir:alias @<OneOrMore_string>?;        # A list of alternate names that the 
                                            # organization is known as, or was 
                                            # known as in the past 
    fhir:description @<markdown>?;          # Additional details about the 
                                            # Organization that could be 
                                            # displayed as further information 
                                            # to identify the Organization 
                                            # beyond its name 
    fhir:contact @<OneOrMore_ExtendedContactDetail>?;  # Official contact details for the 
                                            # Organization 
    fhir:partOf @<Reference> AND {fhir:link 
    			@<Organization> ?}?;  # The organization of which this 
                                            # organization forms a part 
    fhir:endpoint @<OneOrMore_Reference_Endpoint>?;  # Technical endpoints providing 
                                            # access to services operated for 
                                            # the organization 
    fhir:qualification @<OneOrMore_Organization.qualification>?;  # Qualifications, certifications, 
                                            # accreditations, licenses, 
                                            # training, etc. pertaining to the 
                                            # provision of care 
} AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: where
# # Constraint UniqueKey:org-3
# Human readable:The telecom of an organization can never be of use 'home'
#
# Constraint: telecom.where(use = 'home').empty()
# ShEx:
#
# NOT { fhir:telecom. where  (use { fhir:v ['home'] } ) {fhir:v .} } 
{}

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: where
# # Constraint UniqueKey:org-4
# Human readable:The address of an organization can never be of use 'home'
#
# Constraint: address.where(use = 'home').empty()
# ShEx:
#
# NOT { fhir:address. where  (use { fhir:v ['home'] } ) {fhir:v .} } 
{}

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: count
# Unmapped construct found: Plus
# Unmapped construct found: count
# # Constraint UniqueKey:org-1
# Human readable:The organization SHALL at least have a name or an identifier, and possibly more than one
#
# Constraint: (identifier.count() + name.count()) > 0
# ShEx:
#
#(   count  ( fhir:identifier )  Plus     count  ( fhir:name )) { fhir:v MinExclusive 0 } 
{}

)
 

# Qualifications, certifications, accreditations, licenses, training, etc. pertaining to the provision of care
<Organization.qualification> EXTENDS @<BackboneElement> CLOSED {   
    fhir:identifier @<OneOrMore_Identifier>?;  # An identifier for this 
                                            # qualification for the organization 
    fhir:code @<CodeableConcept>;           # Coded representation of the 
                                            # qualification 
    fhir:period @<Period>?;                 # Period during which the 
                                            # qualification is valid 
    fhir:issuer @<Reference> AND {fhir:link 
    			@<Organization> ?}?;  # Organization that regulates and 
                                            # issues the qualification 
}  

#---------------------- Cardinality Types (OneOrMore) -------------------















<OneOrMore_Organization.qualification> CLOSED {
    rdf:first @<Organization.qualification>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_Organization.qualification> 
}

