PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 


#imported_begin 
IMPORT <DataType.shex>
#imported_end
#imported_begin 
IMPORT <Quantity.shex>
#imported_end
# Range of ratio values
<RatioRange> EXTENDS @<DataType> CLOSED {   

    a [fhir:RatioRange]?;

    fhir:lowNumerator @<Quantity>?;         # Low Numerator limit
    fhir:highNumerator @<Quantity>?;        # High Numerator limit
    fhir:denominator @<Quantity>?;          # Denominator value
} AND (

# Constraint UniqueKey:ratrng-1
# Human readable:One of lowNumerator or highNumerator and denominator SHALL be present, or all are absent. If all are absent, there SHALL be some extension present

# Constraint: ((lowNumerator.exists() or highNumerator.exists()) and denominator.exists()) or (lowNumerator.empty() and highNumerator.empty() and denominator.empty() and extension.exists())
# ShEx:

(({fhir:lowNumerator . OR {fhir:highNumerator .}}) AND {fhir:denominator .}) OR ( NOT { fhir:lowNumerator {fhir:v .} }  AND  NOT { fhir:highNumerator {fhir:v .} }  AND  NOT { fhir:denominator {fhir:v .} }  AND {fhir:extension .})

) AND (


# This constraint does not have mapping to a ShEx construct yet.
# Unmapped construct found: lowBoundary
# Unmapped construct found: LessOrEqual
# Unmapped construct found: highBoundary
# # Constraint UniqueKey:ratrng-2
# Human readable:If present, lowNumerator SHALL have a lower value than highNumerator
#
# Constraint: lowNumerator.hasValue().not() or highNumerator.hasValue().not()  or (lowNumerator.lowBoundary() <= highNumerator.highBoundary())
# ShEx:
#
# NOT { fhir:lowNumerator . } OR  NOT { fhir:highNumerator . } OR (   lowBoundary  ( fhir:lowNumerator )  LessOrEqual     highBoundary  ( fhir:highNumerator ))
{}

)
 

