PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 


#imported_begin 
IMPORT <aux.shex>
#imported_end
#imported_begin 
IMPORT <code.shex>
#imported_end
#imported_begin 
IMPORT <Device.shex>
#imported_end
#imported_begin 
IMPORT <instant.shex>
#imported_end
#imported_begin 
IMPORT <Quantity.shex>
#imported_end
#imported_begin 
IMPORT <Reference.shex>
#imported_end
#imported_begin 
IMPORT <Identifier.shex>
#imported_end
#imported_begin 
IMPORT <DomainResource.shex>
#imported_end
#imported_begin 
IMPORT <CodeableConcept.shex>
#imported_end
#imported_begin 
IMPORT <BackboneElement.shex>
#imported_end

start=@<DeviceMetric> AND {fhir:nodeRole [fhir:treeRoot]}

# Measurement, calculation or setting capability of a medical device
<DeviceMetric> EXTENDS @<DomainResource> CLOSED {   

    a [fhir:DeviceMetric]?;
    fhir:nodeRole [fhir:treeRoot]?;

    fhir:identifier @<OneOrMore_Identifier>?;  # Instance identifier
    fhir:type @<CodeableConcept>;           # Identity of metric, for example 
                                            # Heart Rate or PEEP Setting 
    fhir:unit @<CodeableConcept>?;          # Unit of Measure for the Metric
    fhir:device @<Reference> AND {fhir:link 
    			@<Device> ?};  # Describes the link to the Device
    fhir:operationalStatus @<code> AND
    	{fhir:v @fhirvs:metric-operational-status}?;  # on | off | standby | 
                                            # entered-in-error 
    fhir:color @<code> AND
    	{fhir:v @fhirvs:color-codes}?;  # Color name (from CSS4) or #RRGGBB 
                                            # code 
    fhir:category @<code> AND
    	{fhir:v @fhirvs:metric-category};  # measurement | setting | 
                                            # calculation | unspecified 
    fhir:measurementFrequency @<Quantity>?;  # Indicates how often the metric is 
                                            # taken or recorded 
    fhir:calibration @<OneOrMore_DeviceMetric.calibration>?;  # Describes the calibrations that 
                                            # have been performed or that are 
                                            # required to be performed 
}  

# Describes the calibrations that have been performed or that are required to be performed
<DeviceMetric.calibration> EXTENDS @<BackboneElement> CLOSED {   
    fhir:type @<code> AND
    	{fhir:v @fhirvs:metric-calibration-type}?;  # unspecified | offset | gain | 
                                            # two-point 
    fhir:state @<code> AND
    	{fhir:v @fhirvs:metric-calibration-state}?;  # not-calibrated | 
                                            # calibration-required | calibrated 
                                            # | unspecified 
    fhir:time @<instant>?;                  # Describes the time last 
                                            # calibration has been performed 
}  

#---------------------- Cardinality Types (OneOrMore) -------------------



<OneOrMore_DeviceMetric.calibration> CLOSED {
    rdf:first @<DeviceMetric.calibration>  ;
    rdf:rest [rdf:nil] OR @<OneOrMore_DeviceMetric.calibration> 
}

#---------------------- Value Sets ------------------------






